Bridge.define("ClientTestLibrary.Bridge169",{statics:{number:0,m1:function(){(function(){ClientTestLibrary.Bridge169.number=1})()},m2:function(){(function(){return ClientTestLibrary.Bridge169.number=2})()}}});Bridge.define("ClientTestLibrary.Bridge240A",{config:{properties:{Data:0}}});Bridge.define("ClientTestLibrary.Bridge240B",{inherits:[ClientTestLibrary.Bridge240A],getString:function(){return this.setData(this.getData()+1),"B"}});Bridge.define("ClientTestLibrary.Bridge266A",{statics:{test:function(){return ClientTestLibrary.Bridge266B.test("test",{})}}});Bridge.define("ClientTestLibrary.Bridge266B",{statics:{test:function(n,t){return t}}});Bridge.define("ClientTestLibrary.Bridge272",{statics:{test:function(n){return n}}});Bridge.define("ClientTestLibrary.Bridge272.MyEnum",{statics:{abc:1,def:2,ghi:3}});Bridge.define("ClientTestLibrary.TestBridgeIssues",{statics:{n169:function(n){n.expect(2);ClientTestLibrary.Bridge169.m1();n.deepEqual(ClientTestLibrary.Bridge169.number,1,"M1()");ClientTestLibrary.Bridge169.m2();n.deepEqual(ClientTestLibrary.Bridge169.number,2,"M2()")},n240:function(n){n.expect(3);var t=new ClientTestLibrary.Bridge240B;n.ok(t!==null,"Instance of B created");n.equal(t.getString(),"B","b.GetString() = 'B'");n.equal(t.getData(),1,"b.Data = 1")},n266:function(n){n.expect(1);n.ok(ClientTestLibrary.Bridge266A.test()!==null,"new object() call transpiled")},n272:function(n){n.expect(3);n.deepEqual(ClientTestLibrary.Bridge272.test(1),ClientTestLibrary.Bridge272.MyEnum.abc,"Casted MyEnum.Abc");n.deepEqual(ClientTestLibrary.Bridge272.test(3),ClientTestLibrary.Bridge272.MyEnum.ghi,"Casted MyEnum.Ghi");n.deepEqual(ClientTestLibrary.Bridge272.test(4),4,"Casted MyEnum.Abc")},n273:function(n){n.expect(4);var i=Bridge.merge(new Bridge.List$1(Bridge.Int)(),[[0],[1],[2],[3],[4]]),t=i.slice(-1).toArray();n.deepEqual(t,[4],"Slices start = -1");t=i.slice(1).toArray();n.deepEqual(t,[1,2,3,4],"Slices start = 1");t=i.slice(-3,4).toArray();n.deepEqual(t,[2,3],"Slices start = -3, end = 3");t=i.slice(1,3).toArray();n.deepEqual(t,[1,2],"Slices start = 1, end = 2")}}})